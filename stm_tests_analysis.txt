Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 23.17      0.19     0.19    90155     0.00     0.00  TxThread::txCommit()
 20.73      0.36     0.17  4006416     0.00     0.00  TxThread::txLoad(long*)
 13.42      0.47     0.11                             RBTreeTests::largeRandThreads(int, int, int)
 12.20      0.57     0.10        3    33.34    33.34  void std::shuffle<__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, __gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  6.10      0.62     0.05  5207295     0.00     0.00  TLS init function for _my_thread
  4.88      0.66     0.04                             RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const
  2.44      0.68     0.02  1100000     0.00     0.00  std::pair<long, long>& std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::emplace_back<std::pair<long, long> >(std::pair<long, long>&&)
  2.44      0.70     0.02   110000     0.00     0.00  std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, long>, false>*)
  2.44      0.72     0.02    89891     0.00     0.00  TxThread::txEnd()
  2.44      0.74     0.02    69766     0.00     0.00  TxThread::txBegin()
  1.22      0.75     0.01  1029873     0.00     0.00  TxThread::txStore(long*, long)
  1.22      0.76     0.01  1010000     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}> > >::~_State_impl()
  1.22      0.77     0.01    25800     0.00     0.00  TxThread::txMalloc(unsigned long)
  1.22      0.78     0.01    15271     0.00     0.00  std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long* const, long>, false>*)
  1.22      0.79     0.01       85     0.12     0.12  RBTree::sizeHelp(Node*)
  1.22      0.80     0.01       27     0.37     0.37  std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  1.22      0.81     0.01                             HashMapTests::largeRandThreads(int, int, int)
  1.22      0.82     0.01                             RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const
  0.00      0.82     0.00    52049     0.00     0.00  std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<VersionedLock*, false>*)
  0.00      0.82     0.00    10000     0.00     0.00  std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<long, false>*)
  0.00      0.82     0.00     2685     0.00     0.00  long*& std::vector<long*, std::allocator<long*> >::emplace_back<long*>(long*&&)
  0.00      0.82     0.00     1701     0.00     0.00  TxThread::freeSpeculativeMalloc()
  0.00      0.82     0.00     1628     0.00     0.00  TxThread::txAbort()
  0.00      0.82     0.00     1334     0.00     0.00  TxThread::txFree(void*)
  0.00      0.82     0.00      426     0.00     0.00  RBTree::fixDoubleBlack(Node*)
  0.00      0.82     0.00      123     0.00     0.00  RBTree::rightRotate(Node*)
  0.00      0.82     0.00      104     0.00     0.00  RBTree::leftRotate(Node*)
  0.00      0.82     0.00       66     0.00     0.00  void std::vector<long*, std::allocator<long*> >::_M_realloc_insert<long* const&>(__gnu_cxx::__normal_iterator<long**, std::vector<long*, std::allocator<long*> > >, long* const&)
  0.00      0.82     0.00       65     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}> > >::~_State_impl()
  0.00      0.82     0.00       42     0.00     0.00  std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.82     0.00       35     0.00     0.00  std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<void*, false>*)
  0.00      0.82     0.00       32     0.00     0.00  TxThread::~TxThread()
  0.00      0.82     0.00       24     0.00     0.00  std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.82     0.00       19     0.00     0.00  void std::vector<VersionedLock*, std::allocator<VersionedLock*> >::_M_realloc_insert<VersionedLock*>(__gnu_cxx::__normal_iterator<VersionedLock**, std::vector<VersionedLock*, std::allocator<VersionedLock*> > >, VersionedLock*&&)
  0.00      0.82     0.00       15     0.00     0.00  void std::vector<void*, std::allocator<void*> >::_M_realloc_insert<void* const&>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&)
  0.00      0.82     0.00       12     0.00     0.00  std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.82     0.00       10     0.00     0.00  TxThread::TxThread()
  0.00      0.82     0.00        9     0.00     0.00  void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<std::thread>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, std::thread&&)
  0.00      0.82     0.00        4     0.00     0.00  std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.82     0.00        2     0.00     5.00  RBTreeTests::checkOrderAndSize(std::unordered_set<long, std::hash<long>, std::equal_to<long>, std::allocator<long> >&, RBTree&)
  0.00      0.82     0.00        2     0.00    71.79  HashMapTests::checkCorrect(std::unordered_map<long, long, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<long const, long> > > const&, HashMap&)
  0.00      0.82     0.00        2     0.00     0.00  RBTree::inorder()
  0.00      0.82     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN8TxThread9inReadSetEm
  0.00      0.82     0.00        1     0.00     0.00  _GLOBAL__sub_I_failures
  0.00      0.82     0.00        1     0.00     0.00  void std::shuffle<__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, __gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 1.22% of 0.82 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     26.5    0.11    0.11                 RBTreeTests::largeRandThreads(int, int, int) [1]
                0.07    0.00       2/3           void std::shuffle<__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, __gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [9]
                0.02    0.00 1000000/1100000     std::pair<long, long>& std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::emplace_back<std::pair<long, long> >(std::pair<long, long>&&) [12]
                0.00    0.01       2/2           RBTreeTests::checkOrderAndSize(std::unordered_set<long, std::hash<long>, std::equal_to<long>, std::allocator<long> >&, RBTree&) [21]
                0.01    0.00 1000000/1010000     std::thread::_State_impl<std::thread::_Invoker<std::tuple<HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}> > >::~_State_impl() [16]
                0.00    0.00   10000/110000      std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, long>, false>*) [11]
                0.00    0.00   10000/10000       std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<long, false>*) [35]
                0.00    0.00       5/9           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<std::thread>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, std::thread&&) [49]
-----------------------------------------------
                                                 <spontaneous>
[2]     26.4    0.01    0.21                 HashMapTests::largeRandThreads(int, int, int) [2]
                0.00    0.14       2/2           HashMapTests::checkCorrect(std::unordered_map<long, long, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<long const, long> > > const&, HashMap&) [8]
                0.03    0.00       1/3           void std::shuffle<__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, __gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [9]
                0.02    0.01  100000/110000      std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, long>, false>*) [11]
                0.00    0.00  100000/1100000     std::pair<long, long>& std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::emplace_back<std::pair<long, long> >(std::pair<long, long>&&) [12]
                0.00    0.00   10000/1010000     std::thread::_State_impl<std::thread::_Invoker<std::tuple<HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}> > >::~_State_impl() [16]
                0.00    0.00       4/9           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<std::thread>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, std::thread&&) [49]
                0.00    0.00       1/1           void std::shuffle<__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, __gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [54]
-----------------------------------------------
                0.00    0.00     603/89891       HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [22]
                0.00    0.01    3939/89891       HashMapTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [15]
                0.01    0.08   35686/89891       RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [5]
                0.01    0.10   49663/89891       RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [6]
[3]     25.6    0.02    0.19   89891         TxThread::txEnd() [3]
                0.19    0.00   90155/90155       TxThread::txCommit() [4]
-----------------------------------------------
                0.19    0.00   90155/90155       TxThread::txEnd() [3]
[4]     23.2    0.19    0.00   90155         TxThread::txCommit() [4]
                0.00    0.00   52049/52049       std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<VersionedLock*, false>*) [34]
                0.00    0.00      94/1628        TxThread::txAbort() [38]
-----------------------------------------------
                                                 <spontaneous>
[5]     22.9    0.01    0.18                 RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [5]
                0.01    0.08   35686/89891       TxThread::txEnd() [3]
                0.06    0.00 1524124/4006416     TxThread::txLoad(long*) [7]
                0.02    0.00 1585141/5207295     TLS init function for _my_thread [10]
                0.01    0.00   20145/25800       TxThread::txMalloc(unsigned long) [17]
                0.01    0.00   21978/69766       TxThread::txBegin() [13]
                0.00    0.00   10394/1029873     TxThread::txStore(long*, long) [14]
-----------------------------------------------
                                                 <spontaneous>
[6]     22.0    0.04    0.14                 RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [6]
                0.01    0.10   49663/89891       TxThread::txEnd() [3]
                0.01    0.00   42900/69766       TxThread::txBegin() [13]
                0.01    0.00  191590/4006416     TxThread::txLoad(long*) [7]
                0.00    0.00  300934/5207295     TLS init function for _my_thread [10]
                0.00    0.00     426/426         RBTree::fixDoubleBlack(Node*) [23]
                0.00    0.00     848/1334        TxThread::txFree(void*) [24]
                0.00    0.00    3043/1029873     TxThread::txStore(long*, long) [14]
-----------------------------------------------
                0.00    0.00    1268/4006416     RBTree::leftRotate(Node*) [26]
                0.00    0.00    1467/4006416     RBTree::rightRotate(Node*) [25]
                0.00    0.00    9924/4006416     RBTree::fixDoubleBlack(Node*) [23]
                0.00    0.00   13755/4006416     HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [22]
                0.00    0.00   56267/4006416     HashMapTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [15]
                0.01    0.00  191590/4006416     RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [6]
                0.06    0.00 1524124/4006416     RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [5]
                0.09    0.00 2208021/4006416     HashMapTests::checkCorrect(std::unordered_map<long, long, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<long const, long> > > const&, HashMap&) [8]
[7]     20.7    0.17    0.00 4006416         TxThread::txLoad(long*) [7]
                0.00    0.00    1534/1628        TxThread::txAbort() [38]
                0.00    0.00      66/66          void std::vector<long*, std::allocator<long*> >::_M_realloc_insert<long* const&>(__gnu_cxx::__normal_iterator<long**, std::vector<long*, std::allocator<long*> > >, long* const&) [39]
-----------------------------------------------
                0.00    0.14       2/2           HashMapTests::largeRandThreads(int, int, int) [2]
[8]     17.5    0.00    0.14       2         HashMapTests::checkCorrect(std::unordered_map<long, long, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<long const, long> > > const&, HashMap&) [8]
                0.09    0.00 2208021/4006416     TxThread::txLoad(long*) [7]
                0.03    0.00 3216798/5207295     TLS init function for _my_thread [10]
                0.01    0.01 1008777/1029873     TxThread::txStore(long*, long) [14]
-----------------------------------------------
                0.03    0.00       1/3           HashMapTests::largeRandThreads(int, int, int) [2]
                0.07    0.00       2/3           RBTreeTests::largeRandThreads(int, int, int) [1]
[9]     12.2    0.10    0.00       3         void std::shuffle<__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, __gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [9]
-----------------------------------------------
                0.00    0.00    1796/5207295     RBTree::leftRotate(Node*) [26]
                0.00    0.00    2168/5207295     RBTree::rightRotate(Node*) [25]
                0.00    0.00   10997/5207295     RBTree::fixDoubleBlack(Node*) [23]
                0.00    0.00   16320/5207295     HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [22]
                0.00    0.00   73141/5207295     HashMapTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [15]
                0.00    0.00  300934/5207295     RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [6]
                0.02    0.00 1585141/5207295     RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [5]
                0.03    0.00 3216798/5207295     HashMapTests::checkCorrect(std::unordered_map<long, long, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<long const, long> > > const&, HashMap&) [8]
[10]     6.1    0.05    0.00 5207295         TLS init function for _my_thread [10]
                0.00    0.00      10/10          TxThread::TxThread() [48]
-----------------------------------------------
                0.00    0.00   10000/110000      RBTreeTests::largeRandThreads(int, int, int) [1]
                0.02    0.01  100000/110000      HashMapTests::largeRandThreads(int, int, int) [2]
[11]     3.7    0.02    0.01  110000         std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, long>, false>*) [11]
                0.01    0.00      27/27          std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [20]
-----------------------------------------------
                0.00    0.00  100000/1100000     HashMapTests::largeRandThreads(int, int, int) [2]
                0.02    0.00 1000000/1100000     RBTreeTests::largeRandThreads(int, int, int) [1]
[12]     2.4    0.02    0.00 1100000         std::pair<long, long>& std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::emplace_back<std::pair<long, long> >(std::pair<long, long>&&) [12]
-----------------------------------------------
                0.00    0.00     977/69766       HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [22]
                0.00    0.00    3911/69766       HashMapTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [15]
                0.01    0.00   21978/69766       RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [5]
                0.01    0.00   42900/69766       RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [6]
[13]     2.4    0.02    0.00   69766         TxThread::txBegin() [13]
-----------------------------------------------
                0.00    0.00     529/1029873     RBTree::leftRotate(Node*) [26]
                0.00    0.00     624/1029873     RBTree::rightRotate(Node*) [25]
                0.00    0.00     738/1029873     HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [22]
                0.00    0.00    1363/1029873     RBTree::fixDoubleBlack(Node*) [23]
                0.00    0.00    3043/1029873     RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [6]
                0.00    0.00    4405/1029873     HashMapTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [15]
                0.00    0.00   10394/1029873     RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [5]
                0.01    0.01 1008777/1029873     HashMapTests::checkCorrect(std::unordered_map<long, long, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<long const, long> > > const&, HashMap&) [8]
[14]     2.4    0.01    0.01 1029873         TxThread::txStore(long*, long) [14]
                0.01    0.00   14343/15271       std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long* const, long>, false>*) [18]
                0.00    0.00      19/19          void std::vector<VersionedLock*, std::allocator<VersionedLock*> >::_M_realloc_insert<VersionedLock*>(__gnu_cxx::__normal_iterator<VersionedLock**, std::vector<VersionedLock*, std::allocator<VersionedLock*> > >, VersionedLock*&&) [45]
-----------------------------------------------
                                                 <spontaneous>
[15]     1.9    0.00    0.02                 HashMapTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [15]
                0.00    0.01    3939/89891       TxThread::txEnd() [3]
                0.00    0.00   56267/4006416     TxThread::txLoad(long*) [7]
                0.00    0.00    5655/25800       TxThread::txMalloc(unsigned long) [17]
                0.00    0.00    3911/69766       TxThread::txBegin() [13]
                0.00    0.00   73141/5207295     TLS init function for _my_thread [10]
                0.00    0.00    4405/1029873     TxThread::txStore(long*, long) [14]
-----------------------------------------------
                0.00    0.00   10000/1010000     HashMapTests::largeRandThreads(int, int, int) [2]
                0.01    0.00 1000000/1010000     RBTreeTests::largeRandThreads(int, int, int) [1]
[16]     1.2    0.01    0.00 1010000         std::thread::_State_impl<std::thread::_Invoker<std::tuple<HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}> > >::~_State_impl() [16]
-----------------------------------------------
                0.00    0.00    5655/25800       HashMapTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [15]
                0.01    0.00   20145/25800       RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const [5]
[17]     1.2    0.01    0.00   25800         TxThread::txMalloc(unsigned long) [17]
                0.00    0.00       7/15          void std::vector<void*, std::allocator<void*> >::_M_realloc_insert<void* const&>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&) [46]
-----------------------------------------------
                0.00    0.00     928/15271       TxThread::txFree(void*) [24]
                0.01    0.00   14343/15271       TxThread::txStore(long*, long) [14]
[18]     1.2    0.01    0.00   15271         std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long* const, long>, false>*) [18]
                0.00    0.00      24/24          std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [44]
-----------------------------------------------
                                 256             RBTree::sizeHelp(Node*) [19]
                0.01    0.00      85/85          RBTreeTests::checkOrderAndSize(std::unordered_set<long, std::hash<long>, std::equal_to<long>, std::allocator<long> >&, RBTree&) [21]
[19]     1.2    0.01    0.00      85+256     RBTree::sizeHelp(Node*) [19]
                                 256             RBTree::sizeHelp(Node*) [19]
-----------------------------------------------
                0.01    0.00      27/27          std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, long>, false>*) [11]
[20]     1.2    0.01    0.00      27         std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [20]
-----------------------------------------------
                0.00    0.01       2/2           RBTreeTests::largeRandThreads(int, int, int) [1]
[21]     1.2    0.00    0.01       2         RBTreeTests::checkOrderAndSize(std::unordered_set<long, std::hash<long>, std::equal_to<long>, std::allocator<long> >&, RBTree&) [21]
                0.01    0.00      85/85          RBTree::sizeHelp(Node*) [19]
                0.00    0.00      65/65          std::thread::_State_impl<std::thread::_Invoker<std::tuple<RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}> > >::~_State_impl() [40]
                0.00    0.00       2/2           RBTree::inorder() [51]
-----------------------------------------------
                                                 <spontaneous>
[22]     0.3    0.00    0.00                 HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [22]
                0.00    0.00     603/89891       TxThread::txEnd() [3]
                0.00    0.00   13755/4006416     TxThread::txLoad(long*) [7]
                0.00    0.00     977/69766       TxThread::txBegin() [13]
                0.00    0.00     486/1334        TxThread::txFree(void*) [24]
                0.00    0.00   16320/5207295     TLS init function for _my_thread [10]
                0.00    0.00     738/1029873     TxThread::txStore(long*, long) [14]
-----------------------------------------------
                0.00    0.00     426/426         RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [6]
[23]     0.1    0.00    0.00     426         RBTree::fixDoubleBlack(Node*) [23]
                0.00    0.00    9924/4006416     TxThread::txLoad(long*) [7]
                0.00    0.00   10997/5207295     TLS init function for _my_thread [10]
                0.00    0.00     123/123         RBTree::rightRotate(Node*) [25]
                0.00    0.00     104/104         RBTree::leftRotate(Node*) [26]
                0.00    0.00    1363/1029873     TxThread::txStore(long*, long) [14]
-----------------------------------------------
                0.00    0.00     486/1334        HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [22]
                0.00    0.00     848/1334        RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const [6]
[24]     0.1    0.00    0.00    1334         TxThread::txFree(void*) [24]
                0.00    0.00     928/15271       std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long* const, long>, false>*) [18]
                0.00    0.00    2685/2685        long*& std::vector<long*, std::allocator<long*> >::emplace_back<long*>(long*&&) [36]
                0.00    0.00       8/15          void std::vector<void*, std::allocator<void*> >::_M_realloc_insert<void* const&>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&) [46]
-----------------------------------------------
                0.00    0.00     123/123         RBTree::fixDoubleBlack(Node*) [23]
[25]     0.0    0.00    0.00     123         RBTree::rightRotate(Node*) [25]
                0.00    0.00    1467/4006416     TxThread::txLoad(long*) [7]
                0.00    0.00    2168/5207295     TLS init function for _my_thread [10]
                0.00    0.00     624/1029873     TxThread::txStore(long*, long) [14]
-----------------------------------------------
                0.00    0.00     104/104         RBTree::fixDoubleBlack(Node*) [23]
[26]     0.0    0.00    0.00     104         RBTree::leftRotate(Node*) [26]
                0.00    0.00    1268/4006416     TxThread::txLoad(long*) [7]
                0.00    0.00    1796/5207295     TLS init function for _my_thread [10]
                0.00    0.00     529/1029873     TxThread::txStore(long*, long) [14]
-----------------------------------------------
                0.00    0.00   52049/52049       TxThread::txCommit() [4]
[34]     0.0    0.00    0.00   52049         std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<VersionedLock*, false>*) [34]
                0.00    0.00      42/42          std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [41]
-----------------------------------------------
                0.00    0.00   10000/10000       RBTreeTests::largeRandThreads(int, int, int) [1]
[35]     0.0    0.00    0.00   10000         std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<long, false>*) [35]
                0.00    0.00      12/12          std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [47]
-----------------------------------------------
                0.00    0.00    2685/2685        TxThread::txFree(void*) [24]
[36]     0.0    0.00    0.00    2685         long*& std::vector<long*, std::allocator<long*> >::emplace_back<long*>(long*&&) [36]
-----------------------------------------------
                0.00    0.00    1701/1701        TxThread::txAbort() [38]
[37]     0.0    0.00    0.00    1701         TxThread::freeSpeculativeMalloc() [37]
                0.00    0.00      35/35          std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<void*, false>*) [42]
-----------------------------------------------
                0.00    0.00      94/1628        TxThread::txCommit() [4]
                0.00    0.00    1534/1628        TxThread::txLoad(long*) [7]
[38]     0.0    0.00    0.00    1628         TxThread::txAbort() [38]
                0.00    0.00    1701/1701        TxThread::freeSpeculativeMalloc() [37]
-----------------------------------------------
                0.00    0.00      66/66          TxThread::txLoad(long*) [7]
[39]     0.0    0.00    0.00      66         void std::vector<long*, std::allocator<long*> >::_M_realloc_insert<long* const&>(__gnu_cxx::__normal_iterator<long**, std::vector<long*, std::allocator<long*> > >, long* const&) [39]
-----------------------------------------------
                                5969             std::thread::_State_impl<std::thread::_Invoker<std::tuple<RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}> > >::~_State_impl() [40]
                0.00    0.00      65/65          RBTreeTests::checkOrderAndSize(std::unordered_set<long, std::hash<long>, std::equal_to<long>, std::allocator<long> >&, RBTree&) [21]
[40]     0.0    0.00    0.00      65+5969    std::thread::_State_impl<std::thread::_Invoker<std::tuple<RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}> > >::~_State_impl() [40]
                                5969             std::thread::_State_impl<std::thread::_Invoker<std::tuple<RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}> > >::~_State_impl() [40]
-----------------------------------------------
                0.00    0.00      42/42          std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<VersionedLock*, false>*) [34]
[41]     0.0    0.00    0.00      42         std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [41]
-----------------------------------------------
                0.00    0.00      35/35          TxThread::freeSpeculativeMalloc() [37]
[42]     0.0    0.00    0.00      35         std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<void*, false>*) [42]
                0.00    0.00       4/4           std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [50]
-----------------------------------------------
                                3685             TxThread::~TxThread() [43]
                0.00    0.00      32/32          RBTree::inorder() [51]
[43]     0.0    0.00    0.00      32+3685    TxThread::~TxThread() [43]
                                3685             TxThread::~TxThread() [43]
-----------------------------------------------
                0.00    0.00      24/24          std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long* const, long>, false>*) [18]
[44]     0.0    0.00    0.00      24         std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [44]
-----------------------------------------------
                0.00    0.00      19/19          TxThread::txStore(long*, long) [14]
[45]     0.0    0.00    0.00      19         void std::vector<VersionedLock*, std::allocator<VersionedLock*> >::_M_realloc_insert<VersionedLock*>(__gnu_cxx::__normal_iterator<VersionedLock**, std::vector<VersionedLock*, std::allocator<VersionedLock*> > >, VersionedLock*&&) [45]
-----------------------------------------------
                0.00    0.00       7/15          TxThread::txMalloc(unsigned long) [17]
                0.00    0.00       8/15          TxThread::txFree(void*) [24]
[46]     0.0    0.00    0.00      15         void std::vector<void*, std::allocator<void*> >::_M_realloc_insert<void* const&>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&) [46]
-----------------------------------------------
                0.00    0.00      12/12          std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<long, false>*) [35]
[47]     0.0    0.00    0.00      12         std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [47]
-----------------------------------------------
                0.00    0.00      10/10          TLS init function for _my_thread [10]
[48]     0.0    0.00    0.00      10         TxThread::TxThread() [48]
-----------------------------------------------
                0.00    0.00       4/9           HashMapTests::largeRandThreads(int, int, int) [2]
                0.00    0.00       5/9           RBTreeTests::largeRandThreads(int, int, int) [1]
[49]     0.0    0.00    0.00       9         void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<std::thread>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, std::thread&&) [49]
-----------------------------------------------
                0.00    0.00       4/4           std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<void*, false>*) [42]
[50]     0.0    0.00    0.00       4         std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [50]
-----------------------------------------------
                0.00    0.00       2/2           RBTreeTests::checkOrderAndSize(std::unordered_set<long, std::hash<long>, std::equal_to<long>, std::allocator<long> >&, RBTree&) [21]
[51]     0.0    0.00    0.00       2         RBTree::inorder() [51]
                0.00    0.00      32/32          TxThread::~TxThread() [43]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[52]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN8TxThread9inReadSetEm [52]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[53]     0.0    0.00    0.00       1         _GLOBAL__sub_I_failures [53]
-----------------------------------------------
                0.00    0.00       1/1           HashMapTests::largeRandThreads(int, int, int) [2]
[54]     0.0    0.00    0.00       1         void std::shuffle<__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, __gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [54]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [52] _GLOBAL__sub_I__ZN8TxThread9inReadSetEm [38] TxThread::txAbort() [35] std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<long, false>*)
  [53] _GLOBAL__sub_I_failures [13] TxThread::txBegin()   [47] std::_Hashtable<long, long, std::allocator<long>, std::__detail::_Identity, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
   [1] RBTreeTests::largeRandThreads(int, int, int) [14] TxThread::txStore(long*, long) [40] std::thread::_State_impl<std::thread::_Invoker<std::tuple<RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}> > >::~_State_impl()
  [21] RBTreeTests::checkOrderAndSize(std::unordered_set<long, std::hash<long>, std::equal_to<long>, std::allocator<long> >&, RBTree&) [4] TxThread::txCommit() [16] std::thread::_State_impl<std::thread::_Invoker<std::tuple<HashMapTests::largeRandThreads(int, int, int)::{lambda()#3}> > >::~_State_impl()
   [8] HashMapTests::checkCorrect(std::unordered_map<long, long, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<long const, long> > > const&, HashMap&) [17] TxThread::txMalloc(unsigned long) [45] void std::vector<VersionedLock*, std::allocator<VersionedLock*> >::_M_realloc_insert<VersionedLock*>(__gnu_cxx::__normal_iterator<VersionedLock**, std::vector<VersionedLock*, std::allocator<VersionedLock*> > >, VersionedLock*&&)
   [2] HashMapTests::largeRandThreads(int, int, int) [48] TxThread::TxThread() [36] long*& std::vector<long*, std::allocator<long*> >::emplace_back<long*>(long*&&)
  [26] RBTree::leftRotate(Node*) [43] TxThread::~TxThread() [39] void std::vector<long*, std::allocator<long*> >::_M_realloc_insert<long* const&>(__gnu_cxx::__normal_iterator<long**, std::vector<long*, std::allocator<long*> > >, long* const&)
  [25] RBTree::rightRotate(Node*) [34] std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<VersionedLock*, false>*) [46] void std::vector<void*, std::allocator<void*> >::_M_realloc_insert<void* const&>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&)
  [23] RBTree::fixDoubleBlack(Node*) [41] std::_Hashtable<VersionedLock*, VersionedLock*, std::allocator<VersionedLock*>, std::__detail::_Identity, std::equal_to<VersionedLock*>, std::hash<VersionedLock*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [12] std::pair<long, long>& std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::emplace_back<std::pair<long, long> >(std::pair<long, long>&&)
  [51] RBTree::inorder()      [18] std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long* const, long>, false>*) [49] void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<std::thread>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, std::thread&&)
  [19] RBTree::sizeHelp(Node*) [44] std::_Hashtable<long*, std::pair<long* const, long>, std::allocator<std::pair<long* const, long> >, std::__detail::_Select1st, std::equal_to<long*>, std::hash<long*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [9] void std::shuffle<__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, __gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  [37] TxThread::freeSpeculativeMalloc() [42] std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<void*, false>*) [54] void std::shuffle<__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, __gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
   [3] TxThread::txEnd()      [50] std::_Hashtable<void*, void*, std::allocator<void*>, std::__detail::_Identity, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [10] TLS init function for _my_thread
  [24] TxThread::txFree(void*) [11] std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, long>, false>*) [6] RBTreeTests::largeRandThreads(int, int, int)::{lambda()#3}::operator()() const
   [7] TxThread::txLoad(long*) [20] std::_Hashtable<long, std::pair<long const, long>, std::allocator<std::pair<long const, long> >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [5] RBTreeTests::largeRandThreads(int, int, int)::{lambda()#1}::operator()() const
